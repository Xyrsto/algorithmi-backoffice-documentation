{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bem-vindo ao Algorithmi Backoffice!","text":""},{"location":"#para-correr-o-projeto-localmente-nodejs","title":"Para correr o projeto localmente - NodeJS","text":"<ol> <li>Instalar Node.js se ainda n\u00e3o estiver instalado</li> <li>Clonar o reposit\u00f3rio</li> <li>Dentro da pasta do projeto, executar:<ul> <li><code>npm install</code> (apenas na primeira vez para instalar as depend\u00eancias)</li> <li><code>npm run dev</code> (para correr o projeto)</li> </ul> </li> <li>Abrir o navegador em http://localhost:5173</li> </ol>"},{"location":"#para-correr-o-projeto-localmente-java","title":"Para correr o projeto localmente - Java","text":"<ol> <li>Instalar o IDE Netbeans se ainda n\u00e3o estiver instalado</li> <li>Clonar o reposit\u00f3rio</li> <li>No Netbeans, selecionar na barra superior \"Service\" \u2192 \"Servers\" \u2192 \"Add Server\"</li> <li>Selecionar a op\u00e7\u00e3o \"GlassFish Server\". \u00c9 importante instalar a vers\u00e3o 5.1.0 deste servidor.  </li> <li>Escolher o nome do servidor, onde o queremos alojar, ativar Driver JDBC e qual a plataforma Java que pretendemos associar ao mesmo  </li> <li>Carregar bot\u00e3o direito em cima do projeto chamado \"AlgorithmiBO\" e selecionar \"Clean and Build\". Ap\u00f3s isso, selecionar \"Run\"</li> <li>Abrir o navegador em http://localhost:8080</li> </ol>"},{"location":"#ambiente-de-desenvolvimento","title":"Ambiente de Desenvolvimento","text":"<p>Utilizar o editor Visual Studio Code com as seguintes extens\u00f5es:</p>"},{"location":"#para-desenvolvimento-geral","title":"Para desenvolvimento geral","text":"<ul> <li>JavaScript and TypeScript Nightly</li> <li>Svelte for VS Code</li> <li>Svelte Intellisense</li> <li>Tailwind CSS IntelliSense</li> <li>Prettier - Code formatter</li> </ul>"},{"location":"#tecnologias-utilizadas","title":"Tecnologias utilizadas","text":"<ul> <li>TypeScript</li> <li>Prettier</li> <li>Svelte</li> <li>SvelteKit</li> <li>Skeleton</li> <li>Tailwind CSS</li> <li>Monaco Editor</li> <li>Xterm.js</li> <li>Comlink</li> <li>ANTLR</li> </ul>"},{"location":"Java/Java/","title":"Servlets","text":""},{"location":"Java/Java/#o-que-e-um-servlet","title":"O que \u00e9 um Servlet?","text":"<p>Um Servlet \u00e9 uma classe que pode ser configurada num servidor que implemente um Servlet Container (como \u00e9 o caso do GlassFish Server).  Este servidor recebe pedidos HTTP, processa-os e responde ao cliente.</p>"},{"location":"Java/Java/#como-criar-um-servlet","title":"Como criar um Servlet?","text":"<ol> <li>Criar classe Servlet</li> <li>Introduzir o nome e a localiza\u00e7\u00e3o da classe.  </li> <li>Escolher o caminho do Servlet e associ\u00e1-lo ao ficheiro de configura\u00e7\u00e3o \"web.xml\"  </li> </ol>"},{"location":"Java/Java/#java-archives","title":"Java Archives","text":"<ul> <li>MySQL Connector(mysql-connector-java-8.0.28.jar): \u00e9 repons\u00e1vel pela conex\u00e3o entre as classes java e a base de dados \"MySQL\"</li> <li>Common archives: cont\u00e9m as classes necess\u00e1rias para auxiliar o carregamento m\u00faltiplo de v\u00e1rios ficheiros</li> <li>Jackson archives: cont\u00e9m as classes necess\u00e1rias para processamento JSON em Java</li> <li>Algorithmi: cont\u00e9m as classes referentes ao Algorithmi utilizadas nos endpoints da API</li> <li>JJWT archives: cont\u00e9m as classes necess\u00e1rias para a cria\u00e7\u00e3o e valida\u00e7\u00e3o de token JWT, utilizados para a autoriza\u00e7\u00e3o na API.</li> </ul>"},{"location":"Java/REST%20API/Endpoints/","title":"Endpoints","text":""},{"location":"Java/REST%20API/Endpoints/#estrutura-do-projeto","title":"Estrutura do projeto","text":"<p>Neste projeto foram criadas v\u00e1rias packages, de modo a organizar os endpoints da API de acordo com a sua finalidade:</p>"},{"location":"Java/REST%20API/Endpoints/#packages","title":"Packages","text":"<ul> <li>\"api\": nesta package est\u00e3o as classes que representam endpoints com finalidades gen\u00e9ricas (ou seja, que n\u00e3o se associam com nada em particular dentro do Backoffice)</li> <li>\"api.Authentication\": nesta package est\u00e3o as classes que representam endpoints relacionados ao registo e \u00e0 autentica\u00e7\u00e3o de utilizadores</li> <li>\"api.Worksheets\": nesta package est\u00e3o as classes que representam endpoints relacionados \u00e0s fichas de trabalho e aos problemas que constam no Algorithmi. </li> <li>\"myUtils\": nesta package est\u00e3o as classes que cont\u00e9m m\u00e9todos utilizados em v\u00e1rios endpoints da API.  Se quiser saber mais informa\u00e7\u00f5es sobre cada uma destas packages, clique no nome de uma delas para ser redirecionado para a sua p\u00e1gina.</li> </ul>"},{"location":"Java/REST%20API/Packages/api.Authentication/","title":"api.Authentication","text":""},{"location":"Java/REST%20API/Packages/api/","title":"api","text":"<p>Package com classes que representam endpoints com finalidade gen\u00e9rica na API.</p>"},{"location":"Java/REST%20API/Packages/api/#languagesapi","title":"LanguagesAPI","text":"<p>Esta classe do tipo Servlet representa um endpoints da API que tem como objetivo a tradu\u00e7\u00e3o do c\u00f3digo escrito no Algorithmi para diversas linguagens de programa\u00e7\u00e3o.</p>"},{"location":"Java/REST%20API/Packages/api/#como-utilizar-este-endpoint","title":"Como utilizar este endpoint?","text":"<ol> <li>Dependendo da maneira como estiver a correr o projeto, dever\u00e1 utilizar um dos dois URL's abaixo:<ul> <li>Se o projeto estiver a ser corrido localmente, dever\u00e1 usar o URL http://localhost:8080/AlgorithmiBO/api/LanguagesAPI</li> <li>Se o projeto estiver a ser corrido remotamente, dever\u00e1 usar o URL http://ram.ipt.pt:8080/AlgorithmiBO/api/LanguagesAPI</li> </ul> </li> <li>Dever\u00e1 enviar (em formato JSON) no corpo do pedido HTTP os seguintes par\u00e2metros:<ul> <li><code>\"program\"</code>: par\u00e2metro do tipo string. Dever\u00e1 conter o c\u00f3digo do programa    </li> <li><code>\"jwtToken\"</code>: par\u00e2metro do tipo string. Deve conter o token JWT para autentica\u00e7\u00e3o e autoriza\u00e7\u00e3o.</li> <li><code>\"language\"</code>: par\u00e2metro do tipo string. Deve conter a linguagem para a qual o c\u00f3digo ser\u00e1 traduzido.</li> </ul> </li> </ol>"},{"location":"Java/REST%20API/Packages/api/#linguagens-suportadas","title":"Linguagens suportadas","text":"<ul> <li>\"c#\" : traduz o c\u00f3digo para C#</li> <li>\"c++\" : traduz o c\u00f3digo para C++</li> <li>\"javascript - html - css\" : traduz o c\u00f3digo para uma p\u00e1gina HTML com JavaScript e CSS</li> <li>\"java\" : traduz o c\u00f3digo para Java</li> <li>\"c language c11\" : traduz o c\u00f3digo para um standard antigo de C (ISO/IEC 9899:2011)</li> <li>\"python 3\" : traduz o c\u00f3digo para Python 3</li> <li>\"php 5.3 +\" : traduz o c\u00f3digo para PHP 5.3</li> <li>\"javascript\" : traduz o c\u00f3digo para JavaScript</li> <li>\"algorithmi\" : traduz o c\u00f3digo para a linguagem Algorithmi  \u00c9 importante salientar que deve ser enviado no pedido HTTP os nomes da linguagens exatamente como est\u00e3o descritas acima.</li> </ul>"},{"location":"Java/REST%20API/Packages/api/#exemplo-de-um-pedido-enviado-para-este-endpoint","title":"Exemplo de um pedido enviado para este endpoint","text":"<pre><code>{\n    \"program\": \"begin MainProgram\\n\\t\\nend MainProgram\",\n    \"jwtToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJz...\",\n    \"language\": \"c language c11\"\n}\n</code></pre>"},{"location":"Java/REST%20API/Packages/api/#exemplo-de-uma-resposta-bem-sucedida-codigo-202-accepted","title":"Exemplo de uma resposta bem sucedida (c\u00f3digo 202 - Accepted)","text":"<pre><code>// Programmer           Algorithmi - My_Full_Name\n\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;math.h&gt;\n//Main Function\nint main() {\n    return 0;\n}\n</code></pre>"}]}